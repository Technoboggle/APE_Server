# If installing on fresh install of Ubuntu execute the following commands
sudo apt-get update
sudo apt-get upgrade
sudo do-release-upgrade -d

#enabled keyboard switching
sudo apt-get install console-common
# Use the following if you need to change
sudo dpkg-reconfigure console-data

# Install the compiler etc
sudo apt-get install build-essential
sudo apt-get install php5-common php5-json php5-cgi
sudo apt-get install g++ gcc unzip make zip mysql-client libmysqlclient-dev m4
sudo apt-get install fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0 libjpeg-turbo8 libtiff5 libvpx1 libxpm4 libxslt1.1 nginx-common nginx-core libgd-tools fcgiwrap nginx-doc ssl-cert nginx
sudo apt-get install mysql-server
sudo mysql_install_db
sudo mysql_secure_installation
sudo apt-get install php5-fpm php5-mysql

#Upgrade autoconf
sudo mkdir /repos
sudo chown root:sudo /repos
cd /repos
sudo wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz
sudo tar xzf autoconf-2.69.tar.gz
cd autoconf-2.69
sudo ./configure —prefix=/usr
sudo make
sudo make install
cd ../

#Upgrade automake
sudo wget http://ftp.gnu.org/gnu/automake/automake-1.13.tar.gz
sudo tar xzf automake-1.13.tar.gz
cd automake-1.13
sudo ./configure —prefix=/usr
sudo make
sudo make install
cd ../

#Upgrade bison
wget http://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz
sudo tar xzf bison-2.5.1.tar.gz
cd bison-2.5.1
sudo ./configure —prefix=/usr
sudo make
sudo make install
cd ../

#Install C++ Lib Dependencies
sudo apt-get install libevent-dev libz-dev liblzma-dev libssl-dev -y

# Getting started
cd /repos
sudo apt-get install git -y
sudo git clone https://github.com/Technoboggle/APE_Server.git
sudo git clone https://github.com/Technoboggle/APE_JSF.git
cd APE_Server
# Switch to development branch
git checkout Ongoing_Development
# Prove you are on the correct branch
git branch -a
# This will show a list of branches in the repo, with the current one indicated with a *
*  Ongoing_Development
   master
   remotes/origin/1.2-old
   remotes/origin/HEAD -> origin/master
   remotes/origin/ape-project.org
   remotes/origin/master

# Now you finally have the repo downloaded and are in the correct branch you must
# edit the Makefile in the modules directory so that the line:
MYSQL_FLAGS=-L ./$(MYSQL_DEP_DIR)/ -L$(MYSQL_LIB_DIR) -I ./$(MYSQL_DEP_DIR)/ -lmysac-static -lmysqlclient_r
# beconmes:
MYSQL_FLAGS=-L ./$(MYSQL_DEP_DIR)/ -I ./$(MYSQL_DEP_DIR)/ -lmysac-static -lmysqlclient_r


# WooHoo you are now ready to build APE:
sudo ./build.sh

# This will take a while the first time you build it (It has a lot of work to do)

# When complete, test the progam
cd bin
./aped

# This should show you some output like:
   _   ___ ___
  /_\ | _ \ __|
 / _ \|  _/ _|
/_/ \_\_| |___|
AJAX Push Engine

Bind on : 0.0.0.0:6969
Pid     : 6721
Version : 1.1.3-DEV
Build   : Dec  3 2014 04:20:33
Author  : Weelya (contact@weelya.com)

[Module] [spidermonkey] Loading module : Javascript embedded (0.01) - Anthony Catel
[spidermonkey] : Loading script ../scripts/framework/mootools.js
[spidermonkey] : Loading script ../scripts/utils/utils.js
[spidermonkey] : Loading script ../scripts/framework/Http.js
[spidermonkey] : Loading script ../scripts/framework/userslist.js
[spidermonkey] : Loading script ../scripts/commands/proxy.js
[spidermonkey] : Loading script ../scripts/framework/log.js
[spidermonkey] : Loading script ../scripts/utils/checkTool.js

# If you see the banner above, the server is running and you are ready to start developing your new APE service

# To get any remote changes use
git pull origin Ongoing_Development

# To push your changes use:
git push origin Ongoing_Development

